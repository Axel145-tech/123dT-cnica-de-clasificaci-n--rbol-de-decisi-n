# -*- coding: utf-8 -*-
"""Arboldiabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z80whHIvtKy5DJ9A4NmYPZtLgQb_BZ2x
"""

#Importar las libredias numpy y pandas
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
import numpy as np
import pandas as pd
#Importar la función de puntuación de precisión
from sklearn.metrics import accuracy_score
#Importar la libreria de graphviz para la visualizacion del arbol
import graphviz 
from sklearn.tree import export_graphviz

#Acceso a los datos y guardas en la variable dataset
dataset = pd.read_csv("diabetes.csv")

#Mostrar la cantidad de datos
dataset.head()
dataset.shape

#Dividir los datos en x
features = dataset.drop(["Outcome"], axis=1)
X = np.array(features)
y = np.array(dataset["Outcome"])

X_train, X_val, y_train, y_val = train_test_split(X, y, random_state=0, test_size=0.20)

#Crear modelo
tree = DecisionTreeClassifier()
tree.fit(X_train, y_train)

#Profundidad del árbol
tree.tree_.max_depth

#Exactitud del modelo
validation_prediction = tree.predict(X_val)
training_prediction = tree.predict(X_train)

print('Exactitud training data: ', accuracy_score(y_true=y_train, y_pred=training_prediction))
print('Exactitud validation data: ', accuracy_score(y_true=y_val, y_pred=validation_prediction))





#VIsualización del árbol de decisión
feature_names = features.columns

dot_data = export_graphviz(tree, out_file=None, 
                         feature_names=feature_names,  
                         class_names=True,  
                         filled=True, rounded=True,  
                         special_characters=True)  
graph = graphviz.Source(dot_data)

graph